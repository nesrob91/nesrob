/* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. */package com.elektra.estafeta;import java.io.StringWriter;import java.text.SimpleDateFormat;import java.util.Date;import java.util.Locale;import javax.xml.bind.JAXB;import com.elektra.beans.CredencialesTrackingEstafeta;import com.elektra.beans.DatosTracking;import com.elektra.beans.TrackingResponse;import com.elektra.dao.GeneralDao;import com.elektra.dao.GeneralDaoImpl;import com.elektra.dao.TrackingDao;import com.elektra.dao.TrackingDaoImpl;import com.estafeta.www.Filter;import com.estafeta.www.HistoryConfiguration;import com.estafeta.www.QueryResult;import com.estafeta.www.SearchConfiguration;import com.estafeta.www.SearchType;import com.estafeta.www.Service;import com.estafeta.www.ServiceLocator;import com.estafeta.www.ServiceSoap;import com.estafeta.www.TrackingData;import com.estafeta.www.WaybillList;/** * * * * @author eaceves * */public class TrackingEstafeta {    TrackingDao trackingDao = new TrackingDaoImpl();    GeneralDao generalDao = new GeneralDaoImpl();    public TrackingResponse getTracking(DatosTracking datosTracking, CredencialesTrackingEstafeta credencialesTrackingEstafeta, String proxy) {        TrackingResponse trackingResponse = new TrackingResponse();        SimpleDateFormat inFormat = new SimpleDateFormat("dd/MM/yyyy hh:mm:ss aa");        SimpleDateFormat outFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm", new Locale("es", "ES"));        String[] guias = new String[1];        QueryResult queryResult = null;        Service service = new ServiceLocator();        ServiceSoap port;        String request, response;        TrackingData data;        Date date;        String ipProxy = proxy;        //ipProxy = "10.50.8.20";        ipProxy = "10.20.22.21";        //System.setProperty("java.net.useSystemProxies", "true");        System.setProperty("http.proxyHost", ipProxy);        System.setProperty("http.proxyPort", "8080");        System.setProperty("http.proxyUser", "ELEKTRA\\EACEVES");        System.setProperty("http.proxyPassword", "Kiminodaisukidesupeach039");        System.setProperty("https.proxyUser", "ELEKTRA\\EACEVES");        System.setProperty("https.proxyPassword", "Kiminodaisukidesupeach039");        try {            guias[0] = datosTracking.getNumGuia();            WaybillList waybillList = new WaybillList();            waybillList.setWaybillType(credencialesTrackingEstafeta.getWaybillType());            waybillList.setWaybills(guias);            SearchType searchType = new SearchType();            searchType.setWaybillList(waybillList);            searchType.setType(credencialesTrackingEstafeta.getType());            HistoryConfiguration historyConfiguration = new HistoryConfiguration();            historyConfiguration.setIncludeHistory(true);            historyConfiguration.setHistoryType(credencialesTrackingEstafeta.getHistoryType());            Filter filter = new Filter();            filter.setFilterType(null);            filter.setFilterInformation(false);            SearchConfiguration searchConfiguration = new SearchConfiguration();            searchConfiguration.setIncludeDimensions(true);            searchConfiguration.setIncludeWaybillReplaceData(false);            searchConfiguration.setIncludeMultipleServiceData(false);            searchConfiguration.setIncludeSignature(false);            searchConfiguration.setIncludeCustomerInfo(true);            searchConfiguration.setHistoryConfiguration(historyConfiguration);            searchConfiguration.setFilterType(filter);            port = service.getServiceSoap();            queryResult = port.executeQuery(credencialesTrackingEstafeta.getIdSuscriptor(), credencialesTrackingEstafeta.getUsuario(), credencialesTrackingEstafeta.getContrasenia(), searchType, searchConfiguration);            StringWriter sw = new StringWriter();            JAXB.marshal(searchType, sw);            request = sw.toString();            sw = new StringWriter();            JAXB.marshal(queryResult, sw);            response = sw.toString();            if (queryResult.getErrorCode().equals("0") && queryResult.getTrackingData().length == 0) {                // DO NOTHING                trackingResponse.setIdEstatusGuia(0);                trackingResponse.setIdEstatusGuiaCarrier(queryResult.getErrorCode());                trackingResponse.setRefField1("DO NOTHING");            } //          SUCCESS            else if (queryResult.getErrorCode().equals("0") && queryResult.getTrackingData().length > 0) {                data = queryResult.getTrackingData()[0];                if (data.getStatusENG().equals("DELIVERED")) {                    //trackingResponse.setIdEstatusGuia(trackingDao.getIdEstatusGuia(datosTracking.getIdCarrier(), queryResult.getErrorCodeDescriptionSPA()));                    trackingResponse.setIdEstatusGuia(trackingDao.getIdEstatusGuia(datosTracking.getIdCarrier(), "DVL"));                    trackingResponse.setIdEstatusGuiaCarrier("DVL");                    trackingResponse.setRefField1(null);                    trackingResponse.setRecibe(data.getDeliveryData().getReceiverName().substring(data.getDeliveryData().getReceiverName().lastIndexOf(":") + 1).toUpperCase().trim());                    date = inFormat.parse(data.getDeliveryData().getDeliveryDateTime().toUpperCase().replace(".", ""));                    trackingResponse.setFechaRecepcion(outFormat.format(date) + " ");                }                if (data.getStatusENG().equals("ON_TRANSIT")) {                    trackingResponse.setIdEstatusGuia(trackingDao.getIdEstatusGuia(datosTracking.getIdCarrier(), "TRN"));                    trackingResponse.setIdEstatusGuiaCarrier("TRN");                    trackingResponse.setRefField1(null);                }                if (data.getStatusENG().equals("DELIVERED") || data.getStatusENG().equals("ON_TRANSIT")) {                    if (data.getPickupData().getPickupDateTime().equals("")) {                        trackingResponse.setIdEstatusGuia(0);                        trackingResponse.setIdEstatusGuiaCarrier(queryResult.getErrorCode());                        trackingResponse.setRefField1("DO NOTHING");                    } else {                        date = inFormat.parse(data.getPickupData().getPickupDateTime().toUpperCase().replace(".", ""));                        trackingResponse.setFechaRecoleccion(outFormat.format(date) + " ");                    }                }                if (!data.getStatusENG().equals("DELIVERED") && !data.getStatusENG().equals("ON_TRANSIT")) {                    System.out.println(data.getStatusENG());                }            } //          ERROR            else {                System.out.println("Error: " + queryResult.getErrorCodeDescriptionSPA());                trackingResponse.setIdEstatusGuia(-1);                trackingResponse.setIdEstatusGuiaCarrier(null);                trackingResponse.setRefField1(queryResult.getErrorCodeDescriptionSPA());                //trackingDao.insXml("-1", queryResult.getErrorCodeDescriptionSPA(), queryResult.getErrorCodeDescriptionSPA(), request, response, datosTracking, "Tracking");                generalDao.insXml("-1", queryResult.getErrorCodeDescriptionSPA(), queryResult.getErrorCodeDescriptionSPA(), request, response, datosTracking.getPedido(), datosTracking.getOrderId(), datosTracking.getCdId(), datosTracking.getIdCarrier(), "Tracking Estafeta", datosTracking.getRef_field_2());            }        } catch (Exception e) {            trackingResponse.setIdEstatusGuia(-1);            trackingResponse.setIdEstatusGuiaCarrier(null);            trackingResponse.setRefField1(e.toString());        }        return trackingResponse;    }}